<!-- dasda -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.1.0/papaparse.js"></script>

    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
    <script src="https://npmcdn.com/leaflet-geometryutil"></script>

<div id="map" style="width: 600px; height: 600px;"></div>

<script>

var map = L.map('map').setView([51.505, -0.09], 13);

L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);
  // var marker = L.marker([51.5, -0.09]).addTo(mymap);
  var marker
  var latlngs = [
    [45.51, -122.68],
    [37.77, -122.43],
    [34.04, -118.2]
];
map.on('click',onLineClick)
var polyline = L.polyline(latlngs, {color: 'red'}).addTo(map)
function onLineClick(e) 
{ 
  //clicked lat longs
  var lat = e.latlng.lat
  var lng = e.latlng.lng
  let closest_latlng = L.GeometryUtil.closest(map, latlngs, [lat, lng])
  //nearest snapped lat longs
  var closest_lat  = closest_latlng.lat
  var closest_lng  = closest_latlng.lng

  console.log('closest',closest_lat,closest_lng)
  //removing marker if it exists
  if (marker){
    map.removeLayer(marker)
  }
  //placing new marker on the nearest point of line
  marker = L.marker([closest_lat,closest_lng]).addTo(map)
  console.log('clicked',lat,lng)
  console.log('marker',marker)
  } ;
// zoom the map to the polyline
map.fitBounds(polyline.getBounds());

</script>

</body>
</html>
